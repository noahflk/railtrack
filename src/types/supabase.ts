/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/journeys": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.journeys.id"];
          created_at?: parameters["rowFilter.journeys.created_at"];
          updated_at?: parameters["rowFilter.journeys.updated_at"];
          user_id?: parameters["rowFilter.journeys.user_id"];
          duration?: parameters["rowFilter.journeys.duration"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["journeys"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** journeys */
          journeys?: definitions["journeys"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.journeys.id"];
          created_at?: parameters["rowFilter.journeys.created_at"];
          updated_at?: parameters["rowFilter.journeys.updated_at"];
          user_id?: parameters["rowFilter.journeys.user_id"];
          duration?: parameters["rowFilter.journeys.duration"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.journeys.id"];
          created_at?: parameters["rowFilter.journeys.created_at"];
          updated_at?: parameters["rowFilter.journeys.updated_at"];
          user_id?: parameters["rowFilter.journeys.user_id"];
          duration?: parameters["rowFilter.journeys.duration"];
        };
        body: {
          /** journeys */
          journeys?: definitions["journeys"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/passes": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.passes.id"];
          created_at?: parameters["rowFilter.passes.created_at"];
          updated_at?: parameters["rowFilter.passes.updated_at"];
          section_id?: parameters["rowFilter.passes.section_id"];
          arrival_time?: parameters["rowFilter.passes.arrival_time"];
          departure_time?: parameters["rowFilter.passes.departure_time"];
          station_name?: parameters["rowFilter.passes.station_name"];
          station_coordinate_x?: parameters["rowFilter.passes.station_coordinate_x"];
          station_coordinate_y?: parameters["rowFilter.passes.station_coordinate_y"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["passes"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** passes */
          passes?: definitions["passes"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.passes.id"];
          created_at?: parameters["rowFilter.passes.created_at"];
          updated_at?: parameters["rowFilter.passes.updated_at"];
          section_id?: parameters["rowFilter.passes.section_id"];
          arrival_time?: parameters["rowFilter.passes.arrival_time"];
          departure_time?: parameters["rowFilter.passes.departure_time"];
          station_name?: parameters["rowFilter.passes.station_name"];
          station_coordinate_x?: parameters["rowFilter.passes.station_coordinate_x"];
          station_coordinate_y?: parameters["rowFilter.passes.station_coordinate_y"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.passes.id"];
          created_at?: parameters["rowFilter.passes.created_at"];
          updated_at?: parameters["rowFilter.passes.updated_at"];
          section_id?: parameters["rowFilter.passes.section_id"];
          arrival_time?: parameters["rowFilter.passes.arrival_time"];
          departure_time?: parameters["rowFilter.passes.departure_time"];
          station_name?: parameters["rowFilter.passes.station_name"];
          station_coordinate_x?: parameters["rowFilter.passes.station_coordinate_x"];
          station_coordinate_y?: parameters["rowFilter.passes.station_coordinate_y"];
        };
        body: {
          /** passes */
          passes?: definitions["passes"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/sections": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sections.id"];
          created_at?: parameters["rowFilter.sections.created_at"];
          updated_at?: parameters["rowFilter.sections.updated_at"];
          journey_id?: parameters["rowFilter.sections.journey_id"];
          departure_time?: parameters["rowFilter.sections.departure_time"];
          arrival_time?: parameters["rowFilter.sections.arrival_time"];
          train_destination?: parameters["rowFilter.sections.train_destination"];
          train_operator?: parameters["rowFilter.sections.train_operator"];
          train_number?: parameters["rowFilter.sections.train_number"];
          train_category?: parameters["rowFilter.sections.train_category"];
          departure_station_name?: parameters["rowFilter.sections.departure_station_name"];
          departure_station_coordinate_x?: parameters["rowFilter.sections.departure_station_coordinate_x"];
          departure_station_coordinate_y?: parameters["rowFilter.sections.departure_station_coordinate_y"];
          arrival_station_name?: parameters["rowFilter.sections.arrival_station_name"];
          arrival_station_coordinate_x?: parameters["rowFilter.sections.arrival_station_coordinate_x"];
          arrival_station_coordinate_y?: parameters["rowFilter.sections.arrival_station_coordinate_y"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["sections"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** sections */
          sections?: definitions["sections"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sections.id"];
          created_at?: parameters["rowFilter.sections.created_at"];
          updated_at?: parameters["rowFilter.sections.updated_at"];
          journey_id?: parameters["rowFilter.sections.journey_id"];
          departure_time?: parameters["rowFilter.sections.departure_time"];
          arrival_time?: parameters["rowFilter.sections.arrival_time"];
          train_destination?: parameters["rowFilter.sections.train_destination"];
          train_operator?: parameters["rowFilter.sections.train_operator"];
          train_number?: parameters["rowFilter.sections.train_number"];
          train_category?: parameters["rowFilter.sections.train_category"];
          departure_station_name?: parameters["rowFilter.sections.departure_station_name"];
          departure_station_coordinate_x?: parameters["rowFilter.sections.departure_station_coordinate_x"];
          departure_station_coordinate_y?: parameters["rowFilter.sections.departure_station_coordinate_y"];
          arrival_station_name?: parameters["rowFilter.sections.arrival_station_name"];
          arrival_station_coordinate_x?: parameters["rowFilter.sections.arrival_station_coordinate_x"];
          arrival_station_coordinate_y?: parameters["rowFilter.sections.arrival_station_coordinate_y"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.sections.id"];
          created_at?: parameters["rowFilter.sections.created_at"];
          updated_at?: parameters["rowFilter.sections.updated_at"];
          journey_id?: parameters["rowFilter.sections.journey_id"];
          departure_time?: parameters["rowFilter.sections.departure_time"];
          arrival_time?: parameters["rowFilter.sections.arrival_time"];
          train_destination?: parameters["rowFilter.sections.train_destination"];
          train_operator?: parameters["rowFilter.sections.train_operator"];
          train_number?: parameters["rowFilter.sections.train_number"];
          train_category?: parameters["rowFilter.sections.train_category"];
          departure_station_name?: parameters["rowFilter.sections.departure_station_name"];
          departure_station_coordinate_x?: parameters["rowFilter.sections.departure_station_coordinate_x"];
          departure_station_coordinate_y?: parameters["rowFilter.sections.departure_station_coordinate_y"];
          arrival_station_name?: parameters["rowFilter.sections.arrival_station_name"];
          arrival_station_coordinate_x?: parameters["rowFilter.sections.arrival_station_coordinate_x"];
          arrival_station_coordinate_y?: parameters["rowFilter.sections.arrival_station_coordinate_y"];
        };
        body: {
          /** sections */
          sections?: definitions["sections"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/rpc/get_stats": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  journeys: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at: string;
    /** Format: uuid */
    user_id: string;
    /** Format: integer */
    duration?: number;
  };
  passes: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `sections.id`.<fk table='sections' column='id'/>
     */
    section_id: number;
    /** Format: timestamp with time zone */
    arrival_time?: string;
    /** Format: timestamp with time zone */
    departure_time?: string;
    /** Format: text */
    station_name?: string;
    /** Format: real */
    station_coordinate_x?: number;
    /** Format: real */
    station_coordinate_y?: number;
  };
  /** @description Sections of a journey */
  sections: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `journeys.id`.<fk table='journeys' column='id'/>
     */
    journey_id: number;
    /** Format: timestamp with time zone */
    departure_time?: string;
    /** Format: timestamp with time zone */
    arrival_time?: string;
    /** Format: text */
    train_destination?: string;
    /** Format: text */
    train_operator?: string;
    /** Format: text */
    train_number?: string;
    /** Format: text */
    train_category?: string;
    /** Format: text */
    departure_station_name?: string;
    /** Format: real */
    departure_station_coordinate_x?: number;
    /** Format: real */
    departure_station_coordinate_y?: number;
    /** Format: text */
    arrival_station_name?: string;
    /** Format: real */
    arrival_station_coordinate_x?: number;
    /** Format: real */
    arrival_station_coordinate_y?: number;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description journeys */
  "body.journeys": definitions["journeys"];
  /** Format: bigint */
  "rowFilter.journeys.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.journeys.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.journeys.updated_at": string;
  /** Format: uuid */
  "rowFilter.journeys.user_id": string;
  /** Format: integer */
  "rowFilter.journeys.duration": string;
  /** @description passes */
  "body.passes": definitions["passes"];
  /** Format: bigint */
  "rowFilter.passes.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.passes.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.passes.updated_at": string;
  /** Format: bigint */
  "rowFilter.passes.section_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.passes.arrival_time": string;
  /** Format: timestamp with time zone */
  "rowFilter.passes.departure_time": string;
  /** Format: text */
  "rowFilter.passes.station_name": string;
  /** Format: real */
  "rowFilter.passes.station_coordinate_x": string;
  /** Format: real */
  "rowFilter.passes.station_coordinate_y": string;
  /** @description sections */
  "body.sections": definitions["sections"];
  /** Format: bigint */
  "rowFilter.sections.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.sections.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.sections.updated_at": string;
  /** Format: bigint */
  "rowFilter.sections.journey_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.sections.departure_time": string;
  /** Format: timestamp with time zone */
  "rowFilter.sections.arrival_time": string;
  /** Format: text */
  "rowFilter.sections.train_destination": string;
  /** Format: text */
  "rowFilter.sections.train_operator": string;
  /** Format: text */
  "rowFilter.sections.train_number": string;
  /** Format: text */
  "rowFilter.sections.train_category": string;
  /** Format: text */
  "rowFilter.sections.departure_station_name": string;
  /** Format: real */
  "rowFilter.sections.departure_station_coordinate_x": string;
  /** Format: real */
  "rowFilter.sections.departure_station_coordinate_y": string;
  /** Format: text */
  "rowFilter.sections.arrival_station_name": string;
  /** Format: real */
  "rowFilter.sections.arrival_station_coordinate_x": string;
  /** Format: real */
  "rowFilter.sections.arrival_station_coordinate_y": string;
}

export interface operations {}

export interface external {}
